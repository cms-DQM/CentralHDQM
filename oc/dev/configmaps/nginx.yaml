apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-reverse-proxy-conf
  namespace: cms-hdqm-dev
data:
  nginx.conf: |
      worker_processes 4;
      error_log /var/log/nginx/error.log warn;
      pid /var/run/nginx.pid;
      events { worker_connections 1024; }

      http {
          ssl_session_cache shared:SSL:10m;
          ssl_session_timeout 30m;

          proxy_cache_path        /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;
          proxy_temp_path         /var/tmp;

          include                 /etc/nginx/mime.types;
          default_type            application/octet-stream;
          sendfile                on;
          keepalive_timeout       65;

          gzip_comp_level         6;
          gzip_vary               on;
          gzip_min_length         1000;
          gzip_proxied            any;
          gzip_types              text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
          gzip_buffers 16 8k;

          upstream app_backend {
              server backend:5000 fail_timeout=0;
          }

          server {
              listen 8081;
              server_name localhost;

              # Disable buffering for an authenticating proxy
              proxy_buffering off;

              # Allow big headers (oauth2-proxy cookies) - OKD routers allow headers up to 32k
              proxy_buffer_size          32k;
              proxy_buffers              8 64k;
              proxy_busy_buffers_size    64k;

              # Do not restrict upload size (consider setting a limit here if application does not need large request bodies)
              client_max_body_size 0;

              location /oauth2/ {
                  proxy_pass       http://cern-auth-proxy:4180;    # TODO: must match the Release name used to deploy the cern-auth-proxy service
                  proxy_set_header Host                    $host;
                  proxy_set_header X-Scheme                $scheme;
                  proxy_set_header X-Auth-Request-Redirect $request_uri;
              }

              location / {
                  auth_request /oauth2/auth;
                  error_page 401 = /oauth2/start;

                  root /usr/share/nginx/html;
                  index index.html;
                  expires -1;
                  add_header 'Access-Control-Allow-Origin' '*';
                  add_header Pragma "no-cache";
                  add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
                  try_files $uri$args $uri$args/ $uri $uri/ /index.html =404;
              }

              location /api {
                  auth_request /oauth2/auth;
                  error_page 401 = /oauth2/start;

                  proxy_pass http://app_backend/api;
                  proxy_hide_header 'Access-Control-Allow-Origin';
                  add_header 'Access-Control-Allow-Origin' '*';
                  proxy_read_timeout 90;
              }
          }
      }
